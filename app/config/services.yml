# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/service_container.html
parameters:
    markdown_cache_time: 86400

    commonmark_config:
        html_input: escape

    html_purifier_config:
        AutoFormat.Linkify:           true   # Convert non-link URLs to links.
        Cache.DefinitionImpl:         null   # Disable cache
        HTML.Nofollow:                true   # Add rel="nofollow" to outgoing links.
        HTML.TargetBlank:             true   # Add target="_blank" to outgoing links.
        URI.DisableExternalResources: true   # Disable embedding of external resources like images.

services:
    _defaults:
        autoconfigure: true
        autowire: true
        public: false

    _instanceof:
        Doctrine\Common\EventSubscriber:
            tags: [doctrine.event_subscriber]

        Psr\Log\LoggerAwareInterface:
            calls:
                - [setLogger, ["@logger"]]

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Migrations}'

    AppBundle\Command\:
        resource: '../../src/AppBundle/Command/*'
        tags: ['console.command']

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    AppBundle\EventListener\LocaleListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, priority: 15 }
            - { name: kernel.event_listener, event: security.interactive_login, method: onInteractiveLogin }
            - { name: doctrine.event_listener, event: postPersist }
            - { name: doctrine.event_listener, event: postUpdate }

    AppBundle\EventListener\SubmissionImageListener:
        arguments:
            $filesystem: "@oneup_flysystem.submission_images_filesystem"
        tags:
            - { name: doctrine.event_listener, event: postPersist }
            - { name: kernel.event_listener, event: kernel.terminate }

    AppBundle\Form\RequestPasswordResetType:
        arguments:
            $bypass: "@=parameter('kernel.environment') === 'test'"

    AppBundle\Mailer\ResetPasswordMailer:
        arguments:
            $siteName: "%env(SITE_NAME)%"
            $noReplyAddress: "%env(NO_REPLY_ADDRESS)%"
            $salt: "%env(SECRET)%"

    AppBundle\Security\Voter\TokenVoter:
        arguments:
            $forumCreationInterval: "%user_forum_creation_interval%"

    AppBundle\Twig\AppExtension:
        calls:
            - [setSiteName, ["%env(SITE_NAME)%"]]

    AppBundle\Utils\CachedMarkdownConverter:
        calls:
            - [setExpiresAfter, ["%markdown_cache_time%"]]
        lazy: true

    AppBundle\Utils\AuthenticationHelper:
        arguments:
            $secret: "%env(SECRET)%"


    ## Misc

    Doctrine\DBAL\Connection: "@doctrine.dbal.default_connection"

    Doctrine\Common\Persistence\ObjectManager: "@doctrine.orm.entity_manager"
    Doctrine\ORM\EntityManager: "@doctrine.orm.entity_manager"
    Doctrine\ORM\EntityManagerInterface: "@doctrine.orm.entity_manager"

    HTMLPurifier:
        class: HTMLPurifier
        arguments: ['@HTMLPurifier_Config']
        lazy: true

    HTMLPurifier_Config:
        class: HTMLPurifier_Config
        factory: [HTMLPurifier_Config, create]
        arguments:
            - "%html_purifier_config%"
        lazy: true

    League\CommonMark\CommonMarkConverter:
        arguments: ["%commonmark_config%", '@League\CommonMark\Environment']
        lazy: true

    League\CommonMark\Environment:
        factory: [League\CommonMark\Environment, createCommonMarkEnvironment]
        calls:
            - [addExtension, ['@AppBundle\CommonMark\AppExtension']]
            - [addExtension, ['@Webuni\CommonMark\TableExtension\TableExtension']]
        lazy: true

    Webuni\CommonMark\TableExtension\TableExtension: ~

    Symfony\Bundle\SecurityBundle\Security\FirewallMap: "@security.firewall.map"

    Symfony\Component\Serializer\Serializer: "@serializer"

    twig.extension.intl:
        class: Twig_Extensions_Extension_Intl
