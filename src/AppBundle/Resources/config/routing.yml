#
# This file describes non-forum routes, i.e. routes that do not have an /f/
# prefix.
#

raddit_app_front:
    defaults: { _controller: RadditAppBundle:Submission:frontPage, sortBy: hot, page: 1 }
    path: /{sortBy}/{page}
    methods: [GET]
    requirements: { sortBy: hot|new|top|controversial, page: \d+ }

raddit_app_user:
    defaults: { _controller: RadditAppBundle:User:userPage }
    path: /user/{username}
    methods: [GET]

raddit_app_edit_user:
    defaults: { _controller: RadditAppBundle:User:editUser }
    path: /edit_user/{username}
    methods: [GET, POST]

raddit_app_user_settings:
    defaults: { _controller: RadditAppBundle:User:userSettings }
    path: /user_settings/{username}
    methods: [GET, POST]

raddit_app_registration:
    defaults: { _controller: RadditAppBundle:User:registration }
    path: /registration
    methods: [GET, POST]

raddit_app_login:
    defaults: { _controller: RadditAppBundle:Security:login }
    path: /login
    methods: [GET]

raddit_app_create_forum:
    defaults: { _controller: RadditAppBundle:Forum:createForum }
    path: /create_forum
    methods: [GET, POST]

raddit_app_forum_list:
    defaults: { _controller: RadditAppBundle:Forum:list }
    path: /forums
    methods: [GET]

raddit_app_submit:
    defaults: { _controller: RadditAppBundle:Submission:submit, forum_name: null }
    path: /submit/{forum_name}
    methods: [GET, POST]

raddit_app_comment_form:
    defaults: { _controller: RadditAppBundle:Comment:commentForm, comment_id: null }
    methods: [GET]
    path: /comment_form/{forumName}/{submissionId}/{commentId}
    requirements: { submissionId: \d+, commentId: \d+ }

raddit_app_comment_vote:
    defaults:
        _controller: RadditAppBundle:Vote:vote
        _format: html
        entityClass: Raddit\AppBundle\Entity\Comment
    path: /cv/{id}.{_format}
    methods: [POST]
    requirements: { _format: html|json }

raddit_app_submission_vote:
    defaults:
        _controller: RadditAppBundle:Vote:vote
        _format: html
        entityClass: Raddit\AppBundle\Entity\Submission
    path: /sv/{id}.{_format}
    methods: [POST]
    requirements: { _format: html|json }

raddit_app_delete_comment:
    defaults: { _controller: RadditAppBundle:Comment:deleteComment }
    path: /dc/{id}
    methods: [POST]

raddit_app_softdelete_comment:
    defaults: { _controller: RadditAppBundle:Comment:softDeleteComment }
    path: /sdc/{id}
    methods: [POST]

raddit_app_subscribe:
    defaults: { _controller: RadditAppBundle:Forum:subscribe, action: subscribe }
    path: /sub/{id}
    methods: [POST]

raddit_app_unsubscribe:
    defaults: { _controller: RadditAppBundle:Forum:subscribe, action: unsubscribe }
    path: /unsub/{id}
    methods: [POST]

raddit_app_fetch_title:
    defaults: { _controller: RadditAppBundle:Submission:fetchTitle, _format: json }
    path: /ft.json
    methods: [POST]
    options: { expose: true }

raddit_app_request_password_reset:
    defaults: { _controller: RadditAppBundle:ResetPassword:requestReset }
    path: /reset_password
    methods: [GET, POST]

raddit_app_password_reset:
    defaults: { _controller: RadditAppBundle:ResetPassword:reset }
    path: /reset_password/{id}/{expires}/{checksum}
    methods: [GET, POST]

raddit_app_bans:
    defaults: { _controller: RadditAppBundle:Ban:list }
    path: /bans
    methods: [GET]

raddit_app_add_ban:
    defaults: { _controller: RadditAppBundle:Ban:add }
    path: /add_ban
    methods: [GET, POST]

raddit_app_remove_bans:
    defaults: { _controller: RadditAppBundle:Ban:remove }
    path: /remove_bans
    methods: [POST]

raddit_app_login_check:
    path: /login_check
    methods: [POST]

raddit_app_log_out:
    path: /log_out
